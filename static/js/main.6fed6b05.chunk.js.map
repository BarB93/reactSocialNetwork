{"version":3,"sources":["components/Music/Music.module.css","components/News/News.module.css","components/Aside/Aside.module.css","components/Profile/Profile.module.css","components/Profile/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Aside/Navbar/Navbar.module.css","components/Users/User/User.module.css","utils/validators/validators.js","reportWebVitals.js","components/Music/Music.jsx","components/News/News.jsx","components/Aside/Navbar/Navbar.jsx","components/Aside/Aside.jsx","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/common/FormControls/FormControls.js","components/Dialogs/Dialogs.jsx","Redux/dialogs-reducer.js","components/hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","api/api.js","utils/objects-helpers.js","Redux/users-reducer.js","accets/img/avatar.webp","components/Users/User/User.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","accets/img/preloader.svg","components/common/Preloader/Preloader.jsx","Redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","Redux/profile-reducer.js","components/Profile/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","Redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","Redux/app-reducer.js","Redux/aside-reducer.js","Redux/redux-store.js","App.js","index.js","components/common/FormControls/FormControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Message/Message.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css"],"names":["module","exports","min","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Music","props","className","s","music","News","news","Navbar","nav","item","to","activeClassName","active","Aside","aside","Dialog","avatar","dialog","id","src","alt","name","Message","classMy","state","who","my","not_my","message","FormControl","input","meta","touched","error","children","hasError","formControl","Textarea","child","restProps","Input","createField","type","component","validate","placeholder","Field","text","required","value","undefined","maxLength","max","length","maxLength15","maxLength50","minLength2","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","textarea","cols","rows","Dialogs","dialogsElements","dialogs","map","messageElements","messages","dialog_items","values","sendMessage","newMessageBody","SEND_MESSAGE","initialStore","dialogsReducer","action","newMessage","newMessageText","mapStateToPropsForRedirect","isAuth","auth","compose","connect","messagesPage","dispatch","sendMessageTextActionCreator","Component","RedirectComponent","this","React","instance","axios","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","profileAPI","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","u","SUBSCRIBE","UNSUBSCRIBE","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","SUBSCRIBING_IN_PROGRESS","initialState","users","totalUsersCount","isFetching","subscribingProgress","userSubscribe","userUnsubscribe","setIsFetching","toggleSubscribingProgress","subscribeUnsubscribeFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","User","user","left_block","photos","small","userFoto","disabled","some","button","onClick","unsubscribe","subscribe","user_info_wrapper","user_info","user_info_start","user_name","user_status","location","Paginator","onPageChanged","totalItemsCount","portionSize","pagesCount","Math","ceil","useState","portionNumber","setPortionNumber","leftPortion","rightPortion","lastPortion","pages","i","push","buttons","p","cn","buttonPage","Users","pagination","Preloader","preloader","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getSubscribingProgress","UsersContainer","requestUsers","page","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileInfo","profile","ava","profile_info","fullName","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","UPDATE_USER_STATUS","DELETE_POST","posts","likes","newPostText","setUserStatus","profileReducer","addPost","postId","Post","MyPostReduxForm","MyPosts","memo","postElements","reverse","my_posts","newPost","MyPostsContainer","profilePage","Profile","ProfileContainer","match","params","authorisationedUserId","history","getUserProfile","getUserStatus","updateUserStatus","withRouter","Header","header","loginBlock","account","login","logout","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","formSummaryError","Login","formData","LoginContainer","stopSubmit","_error","SET_INITIALIZED","initialized","appReducer","frends","asideReducer","reducers","combineReducers","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","App","initializeApp","path","render","DialogsContainer","AppContainer","promise","Promise","all","SamuraiApp","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.6fed6b05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__3iRfM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3xTvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Aside_aside__1Cpws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__3p5i4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3syM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"MyPosts_profile__32v-M\",\"my_posts\":\"MyPosts_my_posts__SudUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1nGC8\",\"item\":\"Navbar_item__1iEAF\",\"active\":\"Navbar_active__1yl_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__spEbK\",\"left_block\":\"User_left_block__3uUEn\",\"avatar\":\"User_avatar__2adNV\",\"user_info_wrapper\":\"User_user_info_wrapper__2ZhRB\",\"user_info\":\"User_user_info__waQly\",\"user_info_start\":\"User_user_info_start__2ekqh\",\"user_name\":\"User_user_name__jjRkA\",\"button\":\"User_button__z1_qw\",\"location\":\"User_location__XYMqd\"};","export const required = value => {\r\n    let result = value ? undefined : \"Обязательное поле\"\r\n    return result\r\n}\r\n\r\nconst maxLength = max => value => {\r\n    return value && value.length <= max ? undefined : `Максимальная длина ${max} символов`\r\n}\r\nexport const maxLength15 = maxLength(15)\r\nexport const maxLength50 = maxLength(50)\r\n\r\n\r\nconst minLength = min => value => {\r\n    return value && value.length >= min ? undefined : `Минимальная длина ${min} символов`\r\n}\r\nexport const minLength2 = minLength(2)\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import s from './Music.module.css'\r\n\r\nconst Music = function (props) {\r\n  return (\r\n    <div className={s.music}>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music\r\n","import s from './News.module.css'\r\n\r\nconst News = function (props) {\r\n  return (\r\n    <div className={s.news}>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News\r\n","import s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <li className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Профиль</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>Сообщения</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/news\" activeClassName={s.active}>Новости</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/music\" activeClassName={s.active}>Музыка</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Найти друзей</NavLink></li>\r\n            {/*<li className={s.item}><a href=\"#\">Настройки</a></li>*/}\r\n\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar","import s from './Aside.module.css'\r\nimport Navbar from \"./Navbar/Navbar\";\r\n\r\nconst Aside = () => {\r\n\r\n    return (\r\n        <aside className={s.aside}>\r\n            <Navbar />\r\n        </aside>\r\n    )\r\n};\r\n\r\nexport default Aside","import s from './Dialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = function (props) {\r\n    const avatar = props.avatar || 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png'\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n\r\n            <NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>\r\n                <img className={`global_avatar ${s.avatar}`} src={avatar} alt=\"Avatar\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog","import s from './Message.module.css'\r\n\r\nconst Message = function (props) {\r\n\r\n    let classMy = props.state.who === 'my'? s.my: s.not_my;\r\n    return (\r\n        <div className={`${s.message} ${classMy}`}>{props.state.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta:{touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <span className={s.formControl + \" \" + (hasError && s.error)}>\r\n            {children}\r\n            {hasError && <span>{error}</span>}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...props.input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...props.input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (name, type, component, validate, placeholder, props = {}) => <div><Field type={type}\r\n                                                                                         name={name}\r\n                                                                                         placeholder={placeholder}\r\n                                                                                         component={component}\r\n                                                                                         validate={validate} {...props}/> {props.text?props.text:''}</div>\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLength15, required} from \"../../utils/validators/validators\";\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field className={s.textarea} name='newMessageBody' component={Textarea} placeholder='Введите сообщение' cols=\"30\" rows=\"5\" validate={[required,maxLength15]}/></div>\r\n            <div><button>Отправить</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nconst Dialogs = function (props) {\r\n    let dialogsElements = props.state.dialogs.map(dialog => <Dialog name={dialog.name} avatar={dialog.avatar} key={dialog.id} id={dialog.id} />)\r\n    let messageElements = props.state.messages.map(message => <Message key={message.id} state={message}/>)\r\n\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialog_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n","const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nlet initialStore = {\r\n    dialogs: [\r\n        {id: 1, name: 'Борис Б',avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png'},\r\n        {id: 2, name: 'Натали Б',avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png'},\r\n        {id: 3, name: 'Лариса',avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png'},\r\n        {id: 4, name: 'Андрей',avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png'},\r\n        {id: 5, name: 'Макс',avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Привет', who: 'my'},\r\n        {id: 2, message: 'Как ты', who: 'my'},\r\n        {id: 3, message: 'Йоу, норм', who: 'not_my'},\r\n        {id: 4, message: 'Здоров', who: 'not_my'},\r\n        {id: 5, message: 'хав ю', who: 'not_my'},\r\n        {id: 6, message: 'Пойдешь гулять', who: 'my'},\r\n        {id: 7, message: 'Привет2', who: 'not_my'},\r\n        {id: 8, message: 'Как ты2', who: 'my'},\r\n        {id: 9, message: 'Йоу, норм2', who: 'not_my'}\r\n    ],\r\n\r\n}\r\n\r\nconst dialogsReducer = (state = initialStore, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return sendMessage(action.newMessage)\r\n        default:\r\n            return state\r\n    }\r\n\r\n    function sendMessage(newMessage) {\r\n\r\n        const message = {\r\n            id: state.messages.length + 1,\r\n            message: newMessage,\r\n            who: 'my',\r\n        }\r\n\r\n        return {\r\n            ...state,\r\n            messages: [...state.messages,message],\r\n            newMessageText: ''\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const sendMessageTextActionCreator = (newMessage) => ({\r\n    type:SEND_MESSAGE,\r\n    newMessage\r\n})\r\n\r\nexport default  dialogsReducer","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import Dialogs from \"./Dialogs\";\r\nimport {sendMessageTextActionCreator} from \"../../Redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {WithAuthRedirect} from \"../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state.messagesPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToPops = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessage) => {\r\n            dispatch(sendMessageTextActionCreator(newMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToPops),\r\n    WithAuthRedirect\r\n)(Dialogs)\r\n","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '7e8283fb-89d8-4c74-ad80-b7366c282673'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    subscribe(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unsubscribe(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`,{status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return instance.post(`auth/login`,{email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n\r\n}\r\n\r\n\r\n/*\r\nfunction subscribeOrUnsubscribe(isSubscribe) {\r\n    return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n            if (u.id === action.userId) {\r\n                return {...u, followed: isSubscribe}\r\n            }\r\n            return u\r\n        })\r\n    }\r\n}*/\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objects-helpers\";\r\n\r\nconst SUBSCRIBE = 'SUBSCRIBE'\r\nconst UNSUBSCRIBE = 'UNSUBSCRIBE'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst SUBSCRIBING_IN_PROGRESS = 'SUBSCRIBING_IN_PROGRESS'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    subscribingProgress: [],\r\n\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SUBSCRIBE:\r\n            return {...state, users: updateObjectInArray(state.users,action.userId, 'id',{followed:true})}\r\n        case UNSUBSCRIBE:\r\n            return {...state, users: updateObjectInArray(state.users,action.userId, 'id',{followed:false})}\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case SUBSCRIBING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                subscribingProgress: action.isFetching ? [...state.subscribingProgress, action.userId] : state.subscribingProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userSubscribe = (userId) => {\r\n    return {\r\n        type: SUBSCRIBE,\r\n        userId\r\n    }\r\n}\r\nexport const userUnsubscribe = (userId) => {\r\n    return {\r\n        type: UNSUBSCRIBE,\r\n        userId\r\n    }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\nexport const setCurrentPage = (num) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: num\r\n    }\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalUsersCount\r\n    }\r\n}\r\nexport const setIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\nexport const toggleSubscribingProgress = (isFetching, userId) => {\r\n    return {\r\n        type: SUBSCRIBING_IN_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(setIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    const response = await usersAPI.getUsers(page, pageSize)\r\n\r\n    dispatch(setIsFetching(false))\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUsersCount(response.totalCount))\r\n\r\n}\r\n\r\nconst subscribeUnsubscribeFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleSubscribingProgress(true, userId))\r\n\r\n    const response = await apiMethod(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n\r\n    dispatch(toggleSubscribingProgress(false, userId))\r\n}\r\n\r\nexport const unsubscribe = (id) => async (dispatch) => {\r\n    await subscribeUnsubscribeFlow(dispatch,id,usersAPI.unsubscribe,userUnsubscribe)\r\n}\r\nexport const subscribe = (id) => async (dispatch) => {\r\n    await subscribeUnsubscribeFlow(dispatch,id,usersAPI.subscribe,userSubscribe)\r\n}\r\n\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/avatar.a49a4e62.webp\";","import React from \"react\";\r\nimport s from \"./User.module.css\"\r\nimport userFoto from \"../../../accets/img/avatar.webp\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = (props) => {\r\n    debugger\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.left_block}>\r\n                <NavLink to={'/profile/' + props.user.id}>\r\n                    <img className={`global_avatar ${s.avatar}`}\r\n                         src={props.user.photos.small ? props.user.photos.small : userFoto}/>\r\n                </NavLink>\r\n                <div>\r\n                    {\r\n                        props.user.followed\r\n                            ? <button disabled={props.subscribingProgress.some(id => id === props.user.id)}\r\n                                      className={s.button}\r\n                                      onClick={() => {\r\n                                          props.unsubscribe(props.user.id)\r\n                                      }}>Отписаться</button>\r\n\r\n                            : <button disabled={props.subscribingProgress.some(id => id === props.user.id)}\r\n                                      className={s.button}\r\n                                      onClick={() => {\r\n                                          props.subscribe(props.user.id)\r\n                                      }}>Подписаться</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={s.user_info_wrapper}>\r\n                <div className={s.user_info}>\r\n                    <div className={s.user_info_start}>\r\n                        <div className={s.user_name}>{`${props.user.name}`}</div>\r\n                        <div className={s.user_status}>{props.user.status}</div>\r\n                    </div>\r\n                    <div className={s.location}>\r\n                        <div>{'props.user.location.country'},</div>\r\n                        <div>{'props.user.location.city'}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React, {useState} from 'react'\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from 'classnames'\r\n\r\nconst Paginator = ({currentPage, onPageChanged, totalItemsCount, pageSize, portionSize = 10}) => {\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortion = (portionNumber - 1) * portionSize + 1\r\n    const rightPortion = portionNumber * portionSize\r\n    const lastPortion = Math.ceil(pagesCount / portionSize)\r\n\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (<div className={s.buttons}>\r\n        {portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}}>назвад</button>}\r\n        {pages.filter(p => p >= leftPortion && p <= rightPortion && totalItemsCount > pageSize)\r\n            .map(item => <button className={cn({[s.active]: currentPage === item}, s.buttonPage)}\r\n                                 onClick={() => {\r\n                                     onPageChanged(item)\r\n                                 }}>{item}</button>)\r\n        }\r\n        {portionNumber !== lastPortion && <button onClick={() => {setPortionNumber(portionNumber + 1)}}>вперед</button>}\r\n        {portionNumber !== lastPortion && <button onClick={() => {setPortionNumber(lastPortion)}}>в конец</button>}\r\n    </div>)\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport User from \"./User/User\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet Users = (props) => {\r\n\r\n    let users = props.users.map((u) => <User key={u.id}\r\n                                             subscribe={props.subscribe}\r\n                                             unsubscribe={props.unsubscribe}\r\n                                             user={u}\r\n                                             subscribingProgress={props.subscribingProgress}\r\n    />)\r\n\r\n    const pagination = <Paginator totalItemsCount={props.totalUsersCount}\r\n                                  pageSize={props.pageSize}\r\n                                  currentPage={props.currentPage}\r\n                                  onPageChanged={props.onPageChanged}/>\r\n\r\n    return (\r\n        <div>\r\n            {pagination}\r\n            <div>\r\n                <div>{users}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","export default __webpack_public_path__ + \"static/media/preloader.e811695f.svg\";","import preloader from \"../../../accets/img/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader}/>\r\n}\r\n\r\nexport default Preloader","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, users => users.filter(u => true))\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getSubscribingProgress = (state) => {\r\n    return state.usersPage.subscribingProgress\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {requestUsers, subscribe, unsubscribe} from '../../Redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getSubscribingProgress,\r\n    getTotalUsersCount, getUsers,\r\n\r\n} from \"../../Redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (p) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(p, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   users={this.props.users}\r\n                   subscribingProgress={this.props.subscribingProgress}\r\n                   onPageChanged={this.onPageChanged}\r\n                   unsubscribe={this.props.unsubscribe}\r\n                   subscribe={this.props.subscribe}\r\n                   toggleSubscribingProgress={this.props.toggleSubscribingProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        subscribingProgress: getSubscribingProgress(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {requestUsers, subscribe, unsubscribe\r\n    }),\r\n)(UsersContainer)","import React, {useEffect, useState} from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMod = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMod = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMod}>{props.status || '----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMod} autoFocus={true} type=\"text\"\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ava from '../../../accets/img/avatar.webp'\r\n\r\nconst ProfileInfo = function (props){\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    let avatar = props.profile.photos.small || ava\r\n\r\n    return (\r\n        <div className={s.profile_info}>\r\n            <img className={s.avatar + ' global_avatar'} src={avatar} alt='Avatar'/>\r\n            <div>\r\n                <div className={s.name}>{props.profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_USER_STATUS = 'SET_USER_STATUS'\r\nconst UPDATE_USER_STATUS = 'UPDATE_USER_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\n\r\nlet initialStore = {\r\n    posts: [\r\n        {id: 1, message: 'Привет, как дела?', likes: 6,},\r\n        {id: 2, message: 'учу реакт', likes: 23},\r\n        {id: 3, message: 'вообще сил много', likes: 17},\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n\r\n\r\n}\r\n\r\nconst profileReducer = (state = initialStore, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return addPost(action.text)\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case SET_USER_STATUS:\r\n            return {...state, status: action.status}\r\n        case UPDATE_USER_STATUS:\r\n            return {...state, status: action.status}\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(item => item.id !== action.postId)}\r\n        default:\r\n            return state\r\n    }\r\n\r\n    function addPost(text) {\r\n\r\n        const post = {\r\n            id: state.posts.length + 1,\r\n            message: text,\r\n            likes: 0,\r\n        }\r\n\r\n        return {\r\n            ...state,\r\n            posts: [...state.posts, post],\r\n            newPostText: ''\r\n        }\r\n    }\r\n\r\n    function updateNewPostText(newText) {\r\n        return {\r\n            ...state,\r\n            newPostText: newText\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const addPost = (text) => ({\r\n    type: ADD_POST,\r\n    text\r\n})\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n\r\n})\r\nexport const setUserStatus = (status) => ({\r\n    type: SET_USER_STATUS,\r\n    status\r\n\r\n})\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId\r\n\r\n})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response))\r\n}\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setUserStatus(response))\r\n}\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    let avatar = props.avatar || 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png'\r\n    return (\r\n        <div className={s.post}>\r\n            <img src={avatar} alt=\"Avatar\" />\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>{props.likes} like(s)</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import Post from '../Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength50, minLength2, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst MyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field name={'newPost'} placeholder={'Введите текст'} component={Textarea} validate={[required, maxLength50, minLength2]}/></div>\r\n            <div><button type={'submit'}>Добавить пост</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({form: 'addNewPostForm'})(MyPostForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\r\n        let postElements = props.posts.map(post => <Post message={post.message} key={post.id}\r\n                                                              likes={post.likes}/>).reverse()\r\n        const addNewPost = (values) => {\r\n            props.addPost(values.newPost)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className={s.my_posts}>\r\n                    <div>Мои посты:</div>\r\n                    <MyPostReduxForm onSubmit={addNewPost}/>\r\n                </div>\r\n\r\n                {postElements}\r\n            </div>\r\n        )\r\n\r\n})\r\n\r\nexport default MyPosts","import {addPost} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            posts: state.profilePage.posts\r\n        }\r\n    }\r\n\r\n    const MyPostsContainer = connect(mapStateToProps,{addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId || this.props.authorisationedUserId\r\n        if(!userId) this.props.history.push('/login')\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} updateStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    // console.log('mapStateToProps PROFILE')\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorisationedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter\r\n)(ProfileContainer)","import s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt='img' src=\"https://icons-for-free.com/iconfiles/png/512/internet+media+network+social+vk+web+icon-1320194042400488353.png\" />\r\n            <div className={s.loginBlock}>\r\n                { props.isAuth ? <div className={s.account}>Вы вошли как: {props.login}<button onClick={props.logout}>Выйти</button></div> :<NavLink to={'/login'}>Войти</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'network/auth/SET_USER_DATA'\r\nconst TOGGLE_IS_FETCHING = 'network/auth/TOGGLE_IS_FETCHING'\r\n\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: true\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {userId, email, login, isAuth}\r\n    }\r\n}\r\nexport const setIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n        dispatch(setIsFetching(true))\r\n        let response = await authAPI.getAuth()\r\n\r\n        if (response.resultCode === 0) {\r\n            dispatch(setIsFetching(false))\r\n            let {id, login, email} = response.data\r\n            dispatch(setAuthUserData(id, login, email, true))\r\n        }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n        const response = await authAPI.login(email, password, rememberMe)\r\n\r\n        if (response.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = response.messages.length > 0 ? response.messages[0] : 'Some error'\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n        const response = await authAPI.logout()\r\n\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n}\r\n\r\nexport default authReducer","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{logout})(HeaderContainer)","import React from 'react'\r\nimport s from '../common/FormControls/FormControls.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('email','text',Input,[required],'Email')}\r\n            {createField('password','password',Input,[required],'Пароль')}\r\n            {createField('rememberMe','checkbox',Input,null, null, {text:'запомнить меня'})}\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n            <div><button>войти</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = ({login}) => {\r\n    const onSubmit = (formData) => {\r\n            const email = formData.email\r\n            const password = formData.password\r\n            const rememberMe = formData.rememberMe ? true:false\r\n\r\n            login(email, password, rememberMe)\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Авторизация</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return this.props.isAuth? <Redirect to={'/profile'}/> : <Login login={this.props.login}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{login})(LoginContainer)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\nlet initialStore =  {\r\n    initialized:false\r\n}\r\n\r\nconst appReducer = (state = initialStore, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({type:SET_INITIALIZED})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n       Promise.all([promise]).then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n\r\n}\r\n\r\nexport default appReducer","let initialStore =  {\r\n    frends: [\r\n        {id: 1, avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png', name: 'Борис'},\r\n        {id: 4, avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png', name: 'Андрей'},\r\n        {id: 3, avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png', name: 'Лариса'},\r\n        {id: 2, avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png', name: 'Наталья'},\r\n    ],\r\n\r\n}\r\n\r\nconst asideReducer = (state = initialStore, action) => {\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport default asideReducer","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport dialogsReducer from './dialogs-reducer'\r\nimport asideReducer from './aside-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport appReducer from \"./app-reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    aside: asideReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n\r\n\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store","import React from \"react\";\r\nimport './App.css';\r\nimport Music from \"./components/Music/Music.jsx\";\r\nimport News from \"./components/News/News\";\r\nimport Aside from \"./components/Aside/Aside\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport {HashRouter, Route, withRouter} from 'react-router-dom'\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./Redux/redux-store\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) return <Preloader/>\r\n        return (\r\n            <div className=\"app-container\">\r\n                <HeaderContainer/>\r\n                <Aside/>\r\n                <div className=\"app-content\">\r\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                    <Route path='/login' render={() => <LoginContainer/>}/>\r\n                    <Route path='/music' component={Music}/>\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({initialized: state.app.initialized})\r\n\r\nconst AppContainer = compose(withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App)\r\n\r\nconst SamuraiApp = (props) => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </HashRouter>)\r\n}\r\n\r\n\r\nexport default SamuraiApp","import React from 'react';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiApp/>, document.querySelector('#root'))\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__5piyX\",\"error\":\"FormControls_error__lqtPW\",\"formSummaryError\":\"FormControls_formSummaryError__1cWec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__2hjMo\",\"name\":\"ProfileInfo_name__1LF30\",\"profile_info\":\"ProfileInfo_profile_info__3gv6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2qlG4\",\"dialog_items\":\"Dialogs_dialog_items__3xqON\",\"messages\":\"Dialogs_messages__2OtRm\",\"textarea\":\"Dialogs_textarea__37DqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1loMr\",\"active\":\"Dialog_active__1wFTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__W9BPu\",\"my\":\"Message_my__1ObWt\",\"not_my\":\"Message_not_my__2wqW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Paginator_buttons__iGlIX\",\"button\":\"Paginator_button__2VcOw\",\"wrapper\":\"Paginator_wrapper__15ery\",\"buttonPage\":\"Paginator_buttonPage__8zMdw\",\"active\":\"Paginator_active__1RUak\",\"show\":\"Paginator_show__1yTBW\",\"get_users\":\"Paginator_get_users__2-RW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2DnKc\",\"loginBlock\":\"Header_loginBlock__1kQGv\",\"account\":\"Header_account__BH2_n\"};"],"sourceRoot":""}
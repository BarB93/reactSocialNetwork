{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","type","ProfileInfo","profile","Preloader","avatar","photos","small","ava","className","s","profile_info","src","alt","name","fullName","Post","post","message","likes","MyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","maxLength50","minLength2","MyPosts","React","memo","postElements","posts","map","id","reverse","my_posts","values","addPost","newPost","MyPostsContainer","connect","state","profilePage","Profile","ProfileContainer","userId","this","match","params","authorisationedUserId","history","push","getUserProfile","getUserStatus","updateUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.4c4c0ff2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__2hjMo\",\"name\":\"ProfileInfo_name__1LF30\",\"profile_info\":\"ProfileInfo_profile_info__3gv6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__3p5i4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3syM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"MyPosts_profile__32v-M\",\"my_posts\":\"MyPosts_my_posts__SudUo\"};","import React, {useEffect, useState} from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMod = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMod = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMod}>{props.status || '----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMod} autoFocus={true} type=\"text\"\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ava from '../../../accets/img/avatar.webp'\r\n\r\nconst ProfileInfo = function (props){\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    let avatar = props.profile.photos.small || ava\r\n\r\n    return (\r\n        <div className={s.profile_info}>\r\n            <img className={s.avatar + ' global_avatar'} src={avatar} alt='Avatar'/>\r\n            <div>\r\n                <div className={s.name}>{props.profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    let avatar = props.avatar || 'https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png'\r\n    return (\r\n        <div className={s.post}>\r\n            <img src={avatar} alt=\"Avatar\" />\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>{props.likes} like(s)</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import Post from '../Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength50, minLength2, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst MyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field name={'newPost'} placeholder={'Введите текст'} component={Textarea} validate={[required, maxLength50, minLength2]}/></div>\r\n            <div><button type={'submit'}>Добавить пост</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({form: 'addNewPostForm'})(MyPostForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\r\n        let postElements = props.posts.map(post => <Post message={post.message} key={post.id}\r\n                                                              likes={post.likes}/>).reverse()\r\n        const addNewPost = (values) => {\r\n            props.addPost(values.newPost)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className={s.my_posts}>\r\n                    <div>Мои посты:</div>\r\n                    <MyPostReduxForm onSubmit={addNewPost}/>\r\n                </div>\r\n\r\n                {postElements}\r\n            </div>\r\n        )\r\n\r\n})\r\n\r\nexport default MyPosts","import {addPost} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            posts: state.profilePage.posts\r\n        }\r\n    }\r\n\r\n    const MyPostsContainer = connect(mapStateToProps,{addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId || this.props.authorisationedUserId\r\n        if(!userId) this.props.history.push('/login')\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} updateStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    // console.log('mapStateToProps PROFILE')\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorisationedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}